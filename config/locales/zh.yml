# encoding: utf-8
#
# Redmine plugin for Custom Workflows
#
# Copyright Anton Argirov
# Copyright Karel Pičman <karel.picman@kontron.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

zh:
  project_module_custom_workflows_module: "自定义工作流"
  permission_manage_project_workflow: "管理项目的自定义工作流"

  label_custom_workflow: "自定义工作流"
  label_custom_workflow_plural: "自定义工作流列表"
  label_custom_workflow_new: "创建自定义工作流"
  label_workflow_scripts: "工作流脚本"
  label_enabled_projects: "启用的项目"
  label_custom_workflow_export: "导出"
  label_custom_workflow_import: "导入工作流"
  label_save_workflows: "Saving observable objects"
  label_destroy_workflows: "Destroying observable objects"
  label_add_workflows: "Adding observable objects to collection"
  label_remove_workflows: "Removing observable objects from collection"

  button_import: "导入"
  button_custom_workflow_activate: "激活"
  button_custom_workflow_deactivate: "禁用"

  field_after_save: "Workflow script executable after saving observable object"
  field_before_save: "Workflow script executable before saving observable object"
  field_after_destroy: "Workflow script executable after destroying observable object"
  field_before_destroy: "Workflow script executable before destroying observable object"
  field_after_add: "Workflow script executable after adding observable object to collection"
  field_before_add: "Workflow script executable before adding observable object to collection"
  field_after_remove: "Workflow script executable after removing observable object from collection"
  field_before_remove: "Workflow script executable before removing observable object from collection"
  field_shared_code: "Shared code"
  field_observable: "Observable object"
  field_is_enabled: "启用"
  field_enabled_for_all_projects: "所有项目启用"
  field_custom_workflow_author: "作者的电子邮件"
  field_custom_workflow_file: "选择以前导出的XML文件"
  field_custom_workflow_active: "激活"
  field_custom_workflow:
    script: "工作流脚本"

  notice_successful_import: "Custom workflow has successfully imported"
  notice_successful_status_change: "Status has successfully changed"
  error_failed_import: "Error importing custom workflow (unknown format? please see log)"

  activerecord:
    errors:
      messages:
        invalid_script: "包含错误: %{error}"
        custom_workflow_error: "自定义工作流错误 (请联系管理员)"
        new_status_invalid: "禁止从 '%{old_status}' 转换到 '%{new_status}'"
        scripts_absent: "至少应该定义一个脚本"

  text_select_project_custom_workflows: 选择项目自定义工作流
  text_custom_workflow_before_save_note: You can change properties of the issues here. Do not create or update related issues in this script. To finish with error, use raise WorkflowError, "Message to user".
  text_custom_workflow_after_save_note: You can update or create related issues here. Note that this script will be also executed for the newly created issues. So make appropriate checks to prevent infinite recursion.
  text_custom_workflow_issue_code_note: Scripts are executed in the context of Issue object like ordinary before_save and after_save callbacks. So use methods and properties of the issue directly (or through "self"). Instance variables (@variable) are also allowed and may be used if needed.
  text_custom_workflow_shared_code_note: This code will run before any other workflow and may contain shared code, e.g. functions and classes needed by other workflows
  text_custom_workflow_user_code_note: Scripts are executed in the context of User object when user object changes (destroys). Use methods and properties of the user directly (or through "self")
  text_custom_workflow_group_code_note: Scripts are executed in the context of Group object when group object changes (destroys). Use methods and properties of the group directly (or through "self")
  text_custom_workflow_group_users_code_note: These scripts are executed when user being added to group/removed from group. Use variables @user and @group to access appropriate objects in your scripts.
  text_custom_workflow_attachment_code_note: Scripts are executed in the context of Attachment object when attachment object changes (destroys). Use methods and properties of the attachment object directly (or through "self"). Note that these scripts will affect all attachment types (issue, document, wiki pages and etc), so you should check 'container_type' field additionally in your script or select specific "... Attachments" observable object.
  text_custom_workflow_issue_attachments_code_note: These scripts are executed when attachment being added to issue/removed from issue. Use variables @issue and @attachment to access appropriate objects in your scripts.
  text_custom_workflow_project_code_note: Scripts are executed in the context of Project object when project object changes (destroys). Use methods and properties of the project directly (or through "self")
  text_custom_workflow_project_attachments_code_note: These scripts are executed when a file being added to project/removed from project. Use variables @project and @attachment to access appropriate objects in your scripts.
  text_custom_workflow_wiki_content_code_note: Scripts are executed in the context of Wiki Content object when project object changes (destroys). Use methods and properties of the project directly (or through "self")
  text_custom_workflow_wiki_page_attachments_code_note: These scripts are executed when a file being added to wiki page/removed from wiki page. Use variables @page and @attachment to access appropriate objects in your scripts.
  text_custom_workflow_time_entry_code_note: Scripts are executed in the context of TimeEntry object when time enty object changes (destroys). Use methods and properties of the time entry directly (or through "self")
  text_custom_workflow_version_code_note: Scripts are executed in the context of Version object when version object changes (destroys). Use methods and properties of the version directly (or through "self")

  text_no_enabled_projects: 无项目
  text_custom_workflow_author: 将被包含在导出的XML中
  text_custom_workflow_disabled: disabled by admin
  text_custom_workflow_is_for_all: 所有项目启用

  custom_workflow_observable_shared: "<shared code>"
  custom_workflow_observable_issue: "Issue"
  custom_workflow_observable_issue_attachments: "Issue 附件"
  custom_workflow_observable_group: "组"
  custom_workflow_observable_user: "用户"
  custom_workflow_observable_attachment: "附件"
  custom_workflow_observable_project: "项目"
  custom_workflow_observable_project_attachments: "Project Attachments / Files"
  custom_workflow_observable_wiki_content: "Wiki 正文"
  custom_workflow_observable_wiki_page_attachments: "Wiki 页附件"
  custom_workflow_observable_group_users: "用户组"
  custom_workflow_observable_time_entry: "输入时间"
  custom_workflow_observable_version: "版本"
